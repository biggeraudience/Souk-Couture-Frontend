@import '../config/variables';
@import '../config/mixins';

.landing-page {
  width: 100vw;
  // This margin-top now accurately reflects the Navbar's height,
  // ensuring the main content starts right below it.
  margin-top: 12rem;
  min-height: calc(100vh - 12rem); // Ensures the page is at least full viewport height

  @include respond(lg) {
    margin-top: 10rem;
    min-height: calc(100vh - 10rem);
  }

  @include respond(md) {
    margin-top: 9rem;
    min-height: calc(100vh - 9rem);
  }

  @include respond(sm) {
    margin-top: 8rem;
    min-height: calc(100vh - 8rem);
  }

  display: grid;
  // Hero section takes a fixed height, gender section takes the rest (1fr)
  grid-template-rows: auto 1fr; // 'auto' for hero (which will now have a fixed height via its own styles)
  grid-template-columns: 1fr;
}

// Renamed from .hero-overlay to reflect its new role as the primary hero container
.hero-section-main {
  grid-row: 1 / 2; // Still the first grid row
  width: 100%; // Ensure it touches the sides of the screen
  background-color: rgba($color-black, 0.7); // Apply overlay background color
  background-image: url('/src/assets/hero-bg.webp'); // Apply hero background image
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-blend-mode: overlay; // Blends the background image with the background-color

  color: $color-text-light;
  text-align: center;
  box-sizing: border-box; // Ensure padding is included in height calculation

  // --- Fixed Height and Padding ---
  height: 40rem; // Default fixed height for larger screens
  padding: $spacing-l $spacing-xl; // Generous padding for text and button from edges
  display: flex;
  flex-direction: column;
  justify-content: center; // Center content vertically
  align-items: center; // Center content horizontally
  overflow: hidden; // Prevent internal scrolling on larger screens, only for mobile

  // Responsive fixed heights and padding
  @include respond(lg) {
    height: 35rem; // Adjust for large laptops
    padding: $spacing-m $spacing-l;
  }
  @include respond(md) {
    height: 30rem; // Adjust for tablets
    padding: $spacing-s $spacing-m;
  }
  @include respond(sm) {
    height: 25rem !important; // Adjust for mobile
    padding: $spacing-xs; // Smaller padding for mobile
    // Allow internal scrolling on small screens if content overflows
    overflow-y: auto;
  }

  .hero-text {
    font-family: $font-family-body;
    font-size: $font-size-base;
    line-height: $line-height-base;
    margin-bottom: $spacing-m; // Space before the button
    max-width: 90rem; // Limit text width to prevent excessively long lines

    @include respond(lg) {
      font-size: 1.8rem;
      margin-bottom: $spacing-s;
      max-width: 80rem;
    }
    @include respond(md) {
      font-size: 1.6rem;
      margin-bottom: $spacing-s;
      max-width: 70rem;
    }
    @include respond(sm) {
      font-size: 1.4rem;
      line-height: 1.8rem;
      margin-bottom: $spacing-xs;
      max-width: 90%; // Allow text to take more width on mobile
    }
    @media only screen and (max-width: $bp-sm) {
      font-size: 1.2rem;
      line-height: 1.6rem;
      margin-bottom: $spacing-xxs;
    }
  }

  // Styles for the Button within the hero-section-main
  .button {
    // Add any specific styling for the hero button if needed
  }
}

.gender-section {
  grid-row: 2 / 3;
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto; // Let gender boxes define their height
  gap: 0;

  .gender-box {
    position: relative;
    overflow: hidden;
    // Remove border-top/bottom/left/right if you want no borders.
    // If you want separation, ensure these lines are correct:
    border: 0.1rem solid $color-border-default; // This gives all sides a border

    width: 100%;
    // min-height to ensure boxes are visible.
    // The image's object-fit: cover will ensure it fills this.
    min-height: 30rem; // Set a minimum height for gender boxes

    display: flex;
    justify-content: center;
    align-items: center;

    &:first-child {
      // This creates the vertical line between the two boxes
      border-right: 0.1rem solid $color-border-default;
    }

    .gender-img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      display: block;
    }

    .gender-content {
      position: absolute;
      bottom: $spacing-m;
      left: 50%;
      transform: translateX(-50%);
      z-index: $z-index-medium;
      background-color: rgba($color-black, 0.6);
      border: 0.1rem solid $color-border-default;
      padding: $spacing-s;
      color: $color-text-light;
      text-align: center;
      max-width: 80%;
      border-radius: $border-radius-small;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: $spacing-s;

      .gender-overlay-text {
        font-family: $font-family-body;
        font-size: $font-size-small;
        margin-bottom: 0;
      }
    }
  }
}